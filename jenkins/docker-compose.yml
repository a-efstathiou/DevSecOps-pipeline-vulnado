services:
  jenkins:
    build: .  # This will build the Docker image from the Dockerfile in the same directory
    container_name: jenkins-blueocean
    restart: on-failure
    networks:
      - jenkins
    volumes:
      - jenkins-data:/var/jenkins_home  # Persistent Jenkins data
      - jenkins-docker-certs:/certs/client:ro  # Mount Docker client certs for TLS connection (read-only)
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"  # Jenkins web UI
      - "50000:50000"  # Jenkins agent connections

  sonarqube:
    image: sonarqube:lts-community
    depends_on:
      - sonar_db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp

  sonar_db:
    image: postgres:13
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db:/var/lib/postgresql
      - sonar_db_data:/var/lib/postgresql/data
networks:
  jenkins:
    driver: bridge  # Creates a custom bridge network called 'jenkins'

volumes:
  jenkins-data:  # Persistent volume for Jenkins home directory
  jenkins-docker-certs:  # Volume for Docker TLS client certificates
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  sonar_db:
  sonar_db_data: